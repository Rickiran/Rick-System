/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import java.sql.*;
import Classes.Connect;
import java.awt.Color;
import java.awt.Graphics;
/**
 *
 * @author Ricardo Orihuela
 */
public class Graphic_status extends javax.swing.JFrame {
String user="";
int new_entry,not_fixed,checking_out,sort_out,shipped_out;
int [] v_status_q=new int[5];
String [] v_status_name=new String[5];
    
    public Graphic_status() {
        initComponents();
        this.setLocationRelativeTo(null);
        user=Logo.user;
        setTitle("Technician Session - User :" + user);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);    
        ImageIcon wallpaper= new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon ic=new ImageIcon(wallpaper.getImage().getScaledInstance(jl_wallpaper.getWidth(), jl_wallpaper.getHeight(),Image.SCALE_DEFAULT));
        jl_wallpaper.setIcon(ic);
        this.repaint();
        
        try{
            Connection cn=Connect.Cnnct();
            PreparedStatement ps=cn.prepareStatement("select estatus,count(estatus) as Cantidad from equipos group by estatus");
            ResultSet rs=ps.executeQuery();
            
            if(rs.next()){
                int position=0;
                do{
                    v_status_name[position]=rs.getString(1);
                    v_status_q[position]=rs.getInt(2);
                    
                    if(v_status_name[position].equalsIgnoreCase("Checking out")){
                        checking_out=v_status_q[position];
                    } else if(v_status_name[position].equalsIgnoreCase("Shipped out")){
                        shipped_out=v_status_q[position];
                    } else if(v_status_name[position].equalsIgnoreCase("Sort out")){
                        sort_out=v_status_q[position];
                    } else if(v_status_name[position].equalsIgnoreCase("Not Fixed")){
                        not_fixed=v_status_q[position];
                    } else if(v_status_name[position].equalsIgnoreCase("New Entry")){
                        new_entry=v_status_q[position];
                    }
                    position++;
                }
                while(rs.next());
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,"Please contact with your administrator");
        }    
    }
    @Override
     
     public Image getIconImage(){
         Image retValue=Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
         return retValue;
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jl_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("STATUS GRAPHIC");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 180, 40));
        getContentPane().add(jl_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graphic_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graphic_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graphic_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graphic_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graphic_status().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jl_wallpaper;
    // End of variables declaration//GEN-END:variables

public int RepeatedStatus(int new_entry,int not_fixed,int checking_out,int sort_out, int shipped_out){
    if(new_entry>not_fixed && new_entry>checking_out && new_entry>sort_out && new_entry>shipped_out){
        return new_entry;
    }else if(not_fixed>checking_out && not_fixed>sort_out && not_fixed>shipped_out){
        return not_fixed;
    }else if(checking_out>sort_out && checking_out>shipped_out){
        return checking_out;
    }else if(sort_out>shipped_out){
        return sort_out;
    } else{
        return shipped_out;
    }
}

@Override

public void paint(Graphics g){
     super.paint(g);
    int S_Repeated=RepeatedStatus(new_entry,not_fixed,checking_out,sort_out,shipped_out);
    
    int large_new_entry=new_entry*400/S_Repeated;
    int large_not_fixed=not_fixed*400/S_Repeated;
    int large_checking_out=checking_out*400/S_Repeated;
    int large_sort_out=sort_out*400/S_Repeated;
    int large_shipped_out=shipped_out*400/S_Repeated;
    
    g.setColor(new Color(240,248,0));
    g.fillRect(100, 100, large_new_entry, 40);
    g.drawString("New Entry",10,118);
    g.drawString("Quantity" + new_entry,10,133);
    
    g.setColor(new Color(255,0,0));
    g.fillRect(100, 150, large_not_fixed, 40);
    g.drawString("Not Fixed",10,168);
    g.drawString("Quantity" + not_fixed,10,183);
    
    g.setColor(new Color(0,0,0));
    g.fillRect(100, 200, large_checking_out, 40);
    g.drawString("Checking Out",10,218);
    g.drawString("Quantity" + checking_out,10,233);
    
    g.setColor(new Color(255,255,255));
    g.fillRect(100, 250, large_sort_out, 40);
    g.drawString("Sort Out",10,268);
    g.drawString("Quantity" + sort_out,10,283);
    
    g.setColor(new Color(0,85,0));
    g.fillRect(100, 300, large_shipped_out, 40);
    g.drawString("Shipped Out",10,318);
    g.drawString("Quantity" + shipped_out,10,333);
}


}
