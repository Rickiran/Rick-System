/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import java.sql.*;
import Classes.Connect;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Ricardo Orihuela
 */
public class Device_Manage extends javax.swing.JFrame {
    String user="";
    DefaultTableModel model=new DefaultTableModel();
    public static int id_dev=0;
    public Device_Manage() {
        initComponents();
        this.setLocationRelativeTo(null);
        user=Logo.user;
        setTitle("Technician Session - User :" + user);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ImageIcon wallpaper= new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon ic=new ImageIcon(wallpaper.getImage().getScaledInstance(jl_wallpaper.getWidth(), jl_wallpaper.getHeight(),Image.SCALE_DEFAULT));
        jl_wallpaper.setIcon(ic);
        this.repaint();
        
        
        try{
            Connection cn=Connect.Cnnct();
            PreparedStatement ps=cn.prepareStatement("select id_equipo,tipo_equipo,marca,estatus from equipos");
            ResultSet rs=ps.executeQuery();
            
            jtable=new JTable(model);
            jScrollPane1.setViewportView(jtable);
            model.addColumn("");
            model.addColumn("Class of Device");
            model.addColumn("Mark");
            model.addColumn("Status");
            
            while(rs.next()){
                Object [] fila=new Object[4];
                
                for(int i=0;i<4;i++){
                    fila[i]=rs.getObject(i+1);
                }
                model.addRow(fila);
            }
            
            cn.close();
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,"There is a problem to fill the table out");
        }
    }
    @Override
    
    public Image getIconImage(){
        Image retValue= Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue; 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jc_status = new javax.swing.JComboBox<>();
        jl_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                          DEVICES SIGNED");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 280, -1));

        jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 530, 180));

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setForeground(new java.awt.Color(255, 204, 102));
        jButton1.setText("SHOW UP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 310, -1, -1));

        jc_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "New Entry", "Not Fixed", "Checking out", "Sort out", "Shipped out" }));
        getContentPane().add(jc_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 100, -1));
        getContentPane().add(jl_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String status=jc_status.getSelectedItem().toString();
        String query="";
        model.setRowCount(0);
        model.setColumnCount(0);
        try{
         Connection cn=Connect.Cnnct();
         if(status.equals("All")){
             query="select id_equipo,tipo_equipo,marca,estatus from equipos";
         }else{
             query=("select id_equipo,tipo_equipo,marca,estatus from equipos where estatus='" +status+"'");
         }
         PreparedStatement ps=cn.prepareStatement(query);
         ResultSet rs=ps.executeQuery();
            
            jtable=new JTable(model);
            jScrollPane1.setViewportView(jtable);
            model.addColumn("");
            model.addColumn("Class of Device");
            model.addColumn("Mark");
            model.addColumn("Status");
            
            while(rs.next()){
                Object [] fila=new Object[4];
                
                for(int i=0;i<4;i++){
                    fila[i]=rs.getObject(i+1);
                }
                model.addRow(fila);
            }   
            cn.close();
           JOptionPane.showMessageDialog(null,"Table has been successfully completed");
           clickOnRow();
        }
        catch(SQLException e){
          JOptionPane.showMessageDialog(null,"A problem appears please try later");  
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Device_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Device_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Device_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Device_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Device_Manage().setVisible(true);
            }
        });
    }

    public void clickOnRow(){
        jtable.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                int get_value_at_row=jtable.rowAtPoint(e.getPoint());
                int get_value_at_column=0;
                
                id_dev=(Integer)jtable.getValueAt(get_value_at_row, get_value_at_column);
                new Device_information_technician().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jc_status;
    private javax.swing.JLabel jl_wallpaper;
    private javax.swing.JTable jtable;
    // End of variables declaration//GEN-END:variables
}
